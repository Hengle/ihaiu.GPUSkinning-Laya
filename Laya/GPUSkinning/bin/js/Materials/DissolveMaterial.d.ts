import { MBaseMaterial } from "./MBaseMaterial";
import ShaderDefine = Laya.ShaderDefine;
export default class DissolveMaterial extends MBaseMaterial {
    static shaderName: string;
    static defaultMaterial: DissolveMaterial;
    static SHADERDEFINE_DIFFUSEMAP: ShaderDefine;
    static SHADERDEFINE_NORMALMAP: ShaderDefine;
    static SHADERDEFINE_SPECULARMAP: ShaderDefine;
    static SHADERDEFINE_TILINGOFFSET: ShaderDefine;
    static SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;
    static __initDefine__(): void;
    static install(): Promise<void>;
    private static initShader;
    static RENDERMODE_OPAQUE: number;
    static RENDERMODE_CUTOUT: number;
    static RENDERMODE_TRANSPARENT: number;
    static ALBEDOTEXTURE: number;
    static NORMALTEXTURE: number;
    static SPECULARTEXTURE: number;
    static ALBEDOCOLOR: number;
    static MATERIALSPECULAR: number;
    static SHININESS: number;
    static TILINGOFFSET: number;
    static DISSOLVE_TEX: number;
    static DISSOLVE_COLOR: number;
    static DISSOLVE_PROGRESS: number;
    static SHADOWCOLOR: number;
    static COLOR_RANGE: number;
    static COLOR_DEEP: number;
    static OUTLINE_WIDTH: number;
    static CULL: number;
    static BLEND: number;
    static BLEND_SRC: number;
    static BLEND_DST: number;
    static DEPTH_TEST: number;
    static DEPTH_WRITE: number;
    private _enableVertexColor;
    private _albedoIntensity;
    private _albedoColor;
    private _enableLighting;
    constructor();
    _ColorR: any;
    _ColorG: any;
    _ColorB: any;
    _ColorA: any;
    _SpecColorR: number;
    _SpecColorG: number;
    _SpecColorB: number;
    _SpecColorA: number;
    _AlbedoIntensity: number;
    _Shininess: number;
    _MainTex_STX: number;
    _MainTex_STY: number;
    _MainTex_STZ: number;
    _MainTex_STW: number;
    _Cutoff: number;
    renderMode: any;
    enableVertexColor: boolean;
    tilingOffsetX: number;
    tilingOffsetY: number;
    tilingOffsetZ: number;
    tilingOffsetW: number;
    tilingOffset: laya.d3.math.Vector4;
    albedoColorR: any;
    albedoColorG: any;
    albedoColorB: any;
    albedoColorA: any;
    albedoColor: any;
    albedoIntensity: number;
    specularColorR: number;
    specularColorG: number;
    specularColorB: number;
    specularColorA: number;
    specularColor: laya.d3.math.Vector4;
    shininess: number;
    albedoTexture: laya.resource.BaseTexture;
    normalTexture: laya.resource.BaseTexture;
    specularTexture: laya.resource.BaseTexture;
    enableLighting: boolean;
    depthWrite: boolean;
    cull: number;
    blend: number;
    blendSrc: number;
    blendDst: number;
    depthTest: number;
    clone(): DissolveMaterial;
    cloneTo(destObject: any): void;
    dissolveTex: any;
    dissolveColor: any;
    dissolveProgress: number;
    shadowColor: laya.d3.math.Vector4;
    _ColorRange: number;
    _ColorDeep: number;
    _OutlineWidth: number;
}
