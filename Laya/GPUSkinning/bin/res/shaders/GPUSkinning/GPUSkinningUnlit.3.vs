
#ifdef GL_FRAGMENT_PRECISION_HIGH
	precision highp float;
#else
	precision mediump float;
#endif

#include "Lighting.glsl";
//#include "GPUSkinningInclude.glsl";
//==============================================
// attribute 顶点属性
//----------------------------------------------

attribute vec4 a_Position;
attribute vec2 a_Texcoord0;
attribute vec4 a_Texcoord1;
attribute vec4 a_Texcoord2;
attribute vec4 a_Color;

	uniform sampler2D u_AlbedoTexture;

//==============================================
// uniform 全局变量
//----------------------------------------------

// MVP (模型-摄像机-屏幕)矩阵
#ifdef GPU_INSTANCE
	attribute mat4 a_MvpMatrix;
#else
	uniform mat4 u_MvpMatrix;
#endif


//==============================================
// varying 传递给像素片段处理器属性
//----------------------------------------------

// 主贴图UV坐标
varying vec2 v_Texcoord0;
varying vec4 v_Color;

varying vec4 v_Texcoord1;


mat4 getMatrix(int boneIndex)
{
if(boneIndex == 0){ return mat4(
1, 0, 0, 0, 
0, -1.192093E-07, -1, 0, 
0, 1, -1.192093E-07, 0, 
0, 0, 0, 1
);}


if(boneIndex == 1){ return mat4(
0.768163, -0.06263584, -0.637183, 0, 
-0.6402092, -0.06334828, -0.7655842, 0, 
0.00758856, 0.9960241, -0.08876186, 0, 
-0.1266769, 0.8206499, 0.04841574, 1
);}


if(boneIndex == 2){ return mat4(
0.9999999, 1.275695E-09, -4.366151E-08, 0, 
-1.09055E-07, -1.059453E-07, -1, 0, 
1.270086E-09, 1, -1.117011E-07, 0, 
-0.1266769, -0.001490634, 0.04841584, 1
);}


if(boneIndex == 3){ return mat4(
0.6402104, 0.06334681, 0.7655835, 0, 
0.7681621, -0.06263462, -0.6371842, 0, 
0.00758844, 0.9960243, -0.08875996, 0, 
-0.1539965, -0.141391, 0.1508638, 1
);}


if(boneIndex == 4){ return mat4(
0.5591496, 0.07939616, 0.8252562, 0, 
0.8288754, -0.03216075, -0.5585077, 0, 
-0.0178025, 0.9963244, -0.08379223, 0, 
-0.1277363, -0.1425122, 0.1433708, 1
);}


if(boneIndex == 5){ return mat4(
0.1111692, -0.2487023, 0.9621793, 0, 
0.7262548, -0.6405571, -0.2494807, 0, 
0.6783769, 0.7265219, 0.1094109, 0, 
-0.85634, 0.10262, -0.03072722, 1
);}


if(boneIndex == 6){ return mat4(
0.006460791, -0.01781997, 0.9998205, 0, 
0.9539116, 0.3000863, -0.0008156813, 0, 
-0.3000178, 0.9537455, 0.01893742, 0, 
-0.3562874, -0.01676982, 0.01476719, 1
);}


if(boneIndex == 7){ return mat4(
0.4889368, -0.1236325, 0.8635135, 0, 
0.8709247, 0.125129, -0.4752182, 0, 
-0.04929812, 0.9844073, 0.1688548, 0, 
-0.274066, -0.0286857, 0.007302396, 1
);}


if(boneIndex == 8){ return mat4(
0.4325588, -0.0006588719, 0.9016055, 0, 
0.9016032, -0.001904597, -0.4325592, 0, 
0.002002212, 0.9999981, -0.0002298526, 0, 
-0.2880386, 0.0003202892, 0.01829429, 1
);}


if(boneIndex == 9){ return mat4(
0.9966041, -0.002014306, -0.08231575, 0, 
0.002002212, 0.999998, -0.0002297893, 0, 
-0.0823161, -6.417233E-05, -0.9966063, 0, 
-0.4968051, -0.0008054678, -0.2022417, 1
);}


if(boneIndex == 10){ return mat4(
0.5923908, 0.2960319, 0.7492919, 0, 
0.8005041, -0.1113234, -0.5888973, 0, 
-0.09091859, 0.9486688, -0.3029217, 0, 
-0.05474539, -0.1181916, 0.358403, 1
);}


if(boneIndex == 11){ return mat4(
0.7133828, 0.1816123, 0.6768322, 0, 
0.5099033, 0.5280113, -0.679119, 0, 
-0.4807112, 0.8295912, 0.2840693, 0, 
0.1457256, -0.05933638, 0.05824289, 1
);}


if(boneIndex == 12){ return mat4(
0.678511, 0.1131589, 0.7258223, 0, 
0.7188948, 0.1008697, -0.6877611, 0, 
-0.1510396, 0.9884436, -0.01290822, 0, 
0.09399255, -0.02690554, 0.08532654, 1
);}


if(boneIndex == 13){ return mat4(
0.7978107, 0.0534328, 0.6005356, 0, 
0.6002414, 0.02318262, -0.7994826, 0, 
-0.05664052, 0.9983026, -0.01357723, 0, 
0.0593305, -0.01325638, 0.1153427, 1
);}


if(boneIndex == 14){ return mat4(
0.2760008, 0.002587464, -0.9611537, 0, 
-0.05664063, 0.9983026, -0.0135772, 0, 
0.959487, 0.05818774, 0.2756791, 0, 
0.2343741, -0.001449446, 0.3632163, 1
);}


if(boneIndex == 15){ return mat4(
0.6606331, 0.07612312, 0.7468393, 0, 
0.7373368, 0.121139, -0.6645749, 0, 
-0.1410609, 0.9897125, 0.02390003, 0, 
0.03186053, -0.1380657, 0.008768549, 1
);}


if(boneIndex == 16){ return mat4(
-0.2132521, -0.04777315, 0.9758285, 0, 
0.9685495, 0.1207235, 0.2175716, 0, 
-0.1281995, 0.9915361, 0.02052608, 0, 
-0.0002085887, -0.1407723, -0.03508428, 1
);}


if(boneIndex == 17){ return mat4(
0.2910312, -0.05940465, 0.9548674, 0, 
0.9326082, 0.2402479, -0.2693004, 0, 
-0.2134071, 0.9688922, 0.1253208, 0, 
0.1352179, -0.1119383, -0.1722011, 1
);}


if(boneIndex == 18){ return mat4(
0.2134075, -0.9688923, -0.1253196, 0, 
-0.9326077, -0.2402479, 0.2693017, 0, 
-0.2910321, 0.05940303, -0.9548672, 0, 
-0.1935076, 1.628557, 0.03627025, 1
);}


if(boneIndex == 19){ return mat4(
0.2562068, -0.0433553, 0.9656492, 0, 
0.9413235, 0.2382482, -0.2390559, 0, 
-0.2196997, 0.9702363, 0.1018521, 0, 
0.1456443, -0.114154, -0.1331316, 1
);}


if(boneIndex == 20){ return mat4(
0.3619365, -0.07210264, 0.9294102, 0, 
0.8685918, 0.3880641, -0.3081467, 0, 
-0.3384525, 0.9188076, 0.2030823, 0, 
0.3868779, -0.07173472, -0.2939063, 1
);}


if(boneIndex == 21){ return mat4(
0.3958168, -0.08098381, 0.9147517, 0, 
0.8481649, 0.4141134, -0.3303426, 0, 
-0.3520583, 0.9066157, 0.2326005, 0, 
0.4211345, -0.06679039, -0.3296082, 1
);}


if(boneIndex == 22){ return mat4(
0.4069531, -0.09345026, 0.9086563, 0, 
0.8739572, 0.3291644, -0.3575601, 0, 
-0.2656831, 0.9396372, 0.2156259, 0, 
0.2788603, -0.05485756, -0.2861539, 1
);}


if(boneIndex == 23){ return mat4(
0.6712564, -0.05838871, 0.738922, 0, 
0.7383486, 0.1404127, -0.6596404, 0, 
-0.06523828, 0.9883699, 0.1373642, 0, 
-0.07961292, -0.1428529, -0.1592419, 1
);}


if(boneIndex == 24){ return mat4(
0.1145389, 0.2340026, 0.9654655, 0, 
0.9933946, -0.0337683, -0.1096677, 0, 
0.006939666, 0.9716495, -0.2363248, 0, 
-0.3031047, -0.05235089, 0.3684735, 1
);}


if(boneIndex == 25){ return mat4(
0.5910797, 0.09630889, 0.8008428, 0, 
0.6580271, -0.6317847, -0.4096933, 0, 
0.4665031, 0.7691377, -0.4368091, 0, 
-0.6727902, 0.2149558, 0.5922279, 1
);}


if(boneIndex == 26){ return mat4(
0.5625021, 0.15786, 0.811586, 0, 
0.5446253, -0.8092944, -0.2200599, 0, 
0.6220731, 0.5657943, -0.5412042, 0, 
-0.8481592, 0.4816218, 0.6968582, 1
);}


if(boneIndex == 27){ return mat4(
0.9419506, -0.1265783, 0.3109783, 0, 
0.008685308, -0.9167179, -0.3994415, 0, 
0.3356398, 0.378955, -0.8624033, 0, 
-0.3283357, 0.5438879, 0.7978521, 1
);}


if(boneIndex == 28){ return mat4(
0.9457397, -0.1619991, 0.2816621, 0, 
-0.06437194, -0.9430811, -0.3262741, 0, 
0.3184862, 0.2904393, -0.9023373, 0, 
-0.3063387, 0.6169074, 0.8209724, 1
);}


if(boneIndex == 29){ return mat4(
0.6834555, 0.2390551, -0.6897407, 0, 
-0.1371438, -0.8859875, -0.4429658, 0, 
-0.7169945, 0.397341, -0.5727479, 0, 
-0.50521, 0.9528899, -0.2234046, 1
);}


if(boneIndex == 30){ return mat4(
0.3532159, 0.1003123, 0.9301487, 0, 
0.4772524, -0.8744566, -0.08692607, 0, 
0.8046545, 0.4746192, -0.3567463, 0, 
-1.149812, 0.5470229, 0.5656689, 1
);}


if(boneIndex == 31){ return mat4(
0.05588115, 0.09145942, 0.99424, 0, 
0.5878388, -0.8079244, 0.04128099, 0, 
0.8070458, 0.5821458, -0.09891114, 0, 
-1.328074, 0.4320373, 0.3404001, 1
);}


if(boneIndex == 32){ return mat4(
0.6334583, 0.5273406, -0.5662532, 0, 
0.4012898, 0.401809, 0.8231137, 0, 
0.6615868, -0.7486398, 0.04291295, 0, 
-0.5596357, 0.8694304, -0.2885569, 1
);}


if(boneIndex == 33){ return mat4(
0.3844487, -0.07179741, 0.9203503, 0, 
0.8848437, 0.3128599, -0.3452104, 0, 
-0.2631553, 0.9470819, 0.1838078, 0, 
0.1458199, -0.1251496, -0.2009309, 1
);}


if(boneIndex == 34){ return mat4(
0.5030414, 0.01027113, 0.8642014, 0, 
0.8495267, 0.1779825, -0.4966148, 0, 
-0.1589135, 0.9839799, 0.08080676, 0, 
0.06076701, -0.1173238, -0.05914431, 1
);}


if(boneIndex == 35){ return mat4(
0.7193993, 0.07717931, 0.6902956, 0, 
0.6944488, -0.1004171, -0.7125003, 0, 
0.01432744, 0.9919475, -0.1258374, 0, 
0.01032115, -0.01754227, 0.1519079, 1
);}


if(boneIndex == 36){ return mat4(
0.6841253, 0.2245154, 0.6939493, 0, 
0.6834831, 0.1347846, -0.7174146, 0, 
-0.2546043, 0.9651043, -0.06124296, 0, 
0.2021932, -0.1086514, 0.1400272, 1
);}


if(boneIndex == 37){ return mat4(
0.537467, -0.04527463, 0.8420686, 0, 
0.8041078, -0.2733092, -0.5279325, 0, 
0.254047, 0.9608604, -0.1104889, 0, 
-0.5118805, -0.01963947, 0.1681206, 1
);}


if(boneIndex == 38){ return mat4(
0.1711846, 0.1212937, 0.977744, 0, 
0.7586685, -0.6493767, -0.05227044, 0, 
0.6285841, 0.7507317, -0.2031849, 0, 
-0.8450683, 0.2235028, 0.1855713, 1
);}


if(boneIndex == 39){ return mat4(
0.06526243, -0.3655822, 0.9284883, 0, 
0.5886316, -0.7372376, -0.3316535, 0, 
0.8057631, 0.568182, 0.1670795, 0, 
-0.9715238, 0.6759113, -0.1717046, 1
);}


if(boneIndex == 40){ return mat4(
-0.4778945, -0.02329945, 0.8781083, 0, 
0.3309694, -0.9307536, 0.1554277, 0, 
0.8136809, 0.364905, 0.4525134, 0, 
-0.6968212, 0.7309248, -0.4737628, 1
);}


if(boneIndex == 41){ return mat4(
-0.2217978, -0.1745687, 0.9593391, 0, 
0.8745257, -0.4707742, 0.1165236, 0, 
0.4312905, 0.8648112, 0.2570814, 0, 
-0.4572932, 0.2826129, -0.3147735, 1
);}


if(boneIndex == 42){ return mat4(
0.4451076, 0.8795915, -0.1679254, 0, 
0.8827921, -0.3995647, 0.2470375, 0, 
-0.1501947, 0.2582013, 0.9543447, 0, 
-0.1230262, 1.016248, 0.455423, 1
);}


if(boneIndex == 43){ return mat4(
-0.2304081, -0.8428592, 0.4863136, 0, 
0.7428647, -0.4751591, -0.471568, 0, 
0.6285416, 0.2526121, 0.7356107, 0, 
-0.6322051, 1.253085, -0.4961984, 1
);}


if(boneIndex == 44){ return mat4(
-0.5484877, -0.7300088, -0.4077365, 0, 
0.7878811, -0.287914, -0.5443799, 0, 
0.2800092, -0.6198332, 0.733077, 0, 
-0.1135312, 2.031648, 0.01744366, 1
);}


if(boneIndex == 45){ return mat4(
-0.07884408, -0.8696285, 0.4873707, 0, 
0.5715657, 0.3611203, 0.7368211, 0, 
0.81676, -0.3366586, -0.4685775, 0, 
-0.09163512, 1.034078, 0.4437888, 1
);}


if(boneIndex == 46){ return mat4(
-0.1682334, -0.1146296, 0.9790596, 0, 
0.9356281, 0.2941011, 0.1952042, 0, 
-0.3103187, 0.9488755, 0.05777303, 0, 
0.3552395, -0.04071841, -0.1437285, 1
);}


if(boneIndex == 47){ return mat4(
0.2404002, -0.4193491, 0.8754169, 0, 
0.838038, 0.5447413, 0.03081083, 0, 
-0.4897962, 0.7262257, 0.4823863, 0, 
0.4279731, 0.2516209, -0.5307295, 1
);}


if(boneIndex == 48){ return mat4(
0.6681572, 0.1875475, 0.7199941, 0, 
0.7366923, -0.03128576, -0.6755039, 0, 
-0.1041634, 0.9817572, -0.1590685, 0, 
-0.01847031, -0.1154163, 0.2756577, 1
);}


if(boneIndex == 49){ return mat4(
0.6514489, -0.02192785, 0.7583756, 0, 
0.728491, -0.2611431, -0.6333285, 0, 
0.2119319, 0.9650512, -0.1541472, 0, 
-0.4566025, -0.0669984, 0.2641958, 1
);}


if(boneIndex == 50){ return mat4(
0.5783255, 0.0785208, 0.8120185, 0, 
0.8143979, -0.11402, -0.5689946, 0, 
0.04790827, 0.9903708, -0.129888, 0, 
-0.2345221, -0.0966336, 0.2015913, 1
);}


if(boneIndex == 51){ return mat4(
0.6402103, 0.06334966, 0.7655832, 0, 
0.7681623, -0.06263459, -0.6371844, 0, 
0.007586592, 0.9960242, -0.08876213, 0, 
-0.1539948, -0.1413909, 0.1508659, 1
);}


if(boneIndex == 52){ return mat4(
0.7327607, 0.2046118, 0.6489959, 0, 
0.5977958, 0.2621073, -0.7575881, 0, 
-0.3251179, 0.9430981, 0.06974588, 0, 
0.06474422, -0.1540138, 0.07382027, 1
);}


if(boneIndex == 53){ return mat4(
0.8454907, 0.09367748, 0.525709, 0, 
0.5115345, 0.140406, -0.8477136, 0, 
-0.1532244, 0.9856526, 0.07079273, 0, 
-0.04853052, -0.1307515, 0.118941, 1
);}


if(boneIndex == 54){ return mat4(
0.4392671, -0.05814742, 0.8964728, 0, 
0.8888332, -0.1167862, -0.4430988, 0, 
0.1304607, 0.9914537, 0.0003829735, 0, 
-0.2635989, -0.1439452, 0.08557343, 1
);}


if(boneIndex == 55){ return mat4(
0.5592802, 0.3635128, 0.7450264, 0, 
0.7847025, 0.05763749, -0.617187, 0, 
-0.2672967, 0.9298046, -0.2530138, 0, 
0.02310786, -0.07522996, 0.2544963, 1
);}


if(boneIndex == 56){ return mat4(
0.7969086, -0.07407309, 0.5995414, 0, 
0.5871477, -0.1384891, -0.7975452, 0, 
0.1421066, 0.9875901, -0.06687128, 0, 
-0.201738, -0.1327184, 0.138408, 1
);}


if(boneIndex == 57){ return mat4(
0.4154254, 0.1511278, 0.8969851, 0, 
0.8949692, -0.2442203, -0.3733447, 0, 
0.1626391, 0.9578711, -0.2367101, 0, 
-0.2857997, -0.1181084, 0.3082294, 1
);}


if(boneIndex == 58){ return mat4(
0.5502078, 0.5235052, 0.6505487, 0, 
0.6784719, 0.1738841, -0.7137511, 0, 
-0.4867721, 0.8340904, -0.2595112, 0, 
0.1759076, -0.02164281, 0.3183095, 1
);}


if(boneIndex == 59){ return mat4(
0.7532808, 0.4247076, 0.5021865, 0, 
0.531801, 0.05594822, -0.8450194, 0, 
-0.3869822, 0.9036002, -0.1837151, 0, 
0.07192705, -0.05673224, 0.2863613, 1
);}


if(boneIndex == 60){ return mat4(
0.4029118, -0.4194289, 0.8134748, 0, 
0.8909854, -0.02350641, -0.4534225, 0, 
0.2093003, 0.907484, 0.364234, 0, 
-0.4094834, -0.1422421, -0.2727518, 1
);}


if(boneIndex == 61){ return mat4(
0.6242024, -0.2339831, 0.7454012, 0, 
0.5614218, -0.5291545, -0.6362398, 0, 
0.5433017, 0.8156273, -0.1989363, 0, 
-0.573465, 0.02423749, 0.1540751, 1
);}


if(boneIndex == 62){ return mat4(
0.6942315, -0.3338388, 0.6376473, 0, 
0.3848531, -0.5764688, -0.7208133, 0, 
0.608219, 0.7458121, -0.2717238, 0, 
-0.5633674, 0.04440401, 0.1797103, 1
);}


if(boneIndex == 63){ return mat4(
0.8451691, 0.1657351, 0.5081545, 0, 
0.5091329, 0.03977277, -0.8597686, 0, 
-0.1627045, 0.9853682, -0.05076648, 0, 
0.04110965, -0.1532459, 0.1642147, 1
);}


if(boneIndex == 64){ return mat4(
0.9106019, 0.09332352, 0.4026099, 0, 
0.3897583, 0.1300712, -0.9116853, 0, 
-0.1374496, 0.9871032, 0.08206946, 0, 
0.04505759, -0.1710365, 0.0793652, 1
);}


if(boneIndex == 65){ return mat4(
0.9709979, 0.05531351, 0.2326008, 0, 
0.2343515, -0.02751891, -0.9717624, 0, 
-0.04735065, 0.99809, -0.03968368, 0, 
0.03089471, -0.131978, 0.1779577, 1
);}


if(boneIndex == 66){ return mat4(
-0.2605622, -0.8725344, 0.4132694, 0, 
0.5050117, 0.2416478, 0.8285952, 0, 
-0.822843, 0.4246061, 0.3776757, 0, 
0.4832673, -0.2571025, 0.4421204, 1
);}


if(boneIndex == 0){ return mat4(
1, 0, 0, 0, 
0, -1.192093E-07, -1, 0, 
0, 1, -1.192093E-07, 0, 
0, 0, 0, 1
);}


if(boneIndex == 1){ return mat4(
0.976008, 0.05968897, -0.2093932, 0, 
-0.206256, -0.05466998, -0.9769697, 0, 
-0.06976184, 0.9967189, -0.04104713, 0, 
-0.221385, 0.7447019, 0.05787318, 1
);}


if(boneIndex == 2){ return mat4(
0.9999999, 6.285093E-10, 8.653799E-09, 0, 
2.524867E-08, -1.221439E-07, -1, 0, 
-8.348742E-09, 1, -1.296737E-07, 0, 
-0.221385, 0.004676802, 0.05787327, 1
);}


if(boneIndex == 3){ return mat4(
0.2062576, 0.05466869, 0.9769695, 0, 
0.9760075, 0.0596902, -0.2093946, 0, 
-0.06976283, 0.9967189, -0.0410455, 0, 
-0.1792715, -0.2211925, 0.1030311, 1
);}


if(boneIndex == 4){ return mat4(
0.1220402, 0.09382899, 0.98808, 0, 
0.9827944, 0.1276347, -0.1335077, 0, 
-0.1386402, 0.9873732, -0.07663807, 0, 
-0.1039292, -0.2127126, 0.1400818, 1
);}


if(boneIndex == 5){ return mat4(
0.1321099, -0.3257238, 0.9361899, 0, 
0.5302814, -0.7747295, -0.344378, 0, 
0.8374655, 0.5419399, 0.07037568, 0, 
-1.053014, 0.2016455, -0.005427042, 1
);}


if(boneIndex == 6){ return mat4(
0.03939793, -0.03540742, 0.9985963, 0, 
0.9474922, 0.318713, -0.02608116, 0, 
-0.317342, 0.9471898, 0.0461048, 0, 
-0.4632845, -0.009369276, 0.005952793, 1
);}


if(boneIndex == 7){ return mat4(
0.4157258, -0.08243117, 0.9057467, 0, 
0.9023488, -0.08716605, -0.4220995, 0, 
0.1137445, 0.9927776, 0.03814442, 0, 
-0.4303042, 0.009919068, 0.0209769, 1
);}


if(boneIndex == 8){ return mat4(
0.3726837, -0.05467572, 0.9263463, 0, 
0.9183093, -0.121851, -0.3766426, 0, 
0.1334694, 0.9910415, 0.004797255, 0, 
-0.4412068, 0.01629175, 0.02762671, 1
);}


if(boneIndex == 9){ return mat4(
0.9908423, -0.1333397, -0.02125181, 0, 
0.1334694, 0.9910414, 0.004797323, 0, 
-0.0204217, 0.007589951, -0.9997627, 0, 
-0.6344082, 0.04193201, -0.2052609, 1
);}


if(boneIndex == 10){ return mat4(
0.1687019, 0.1384701, 0.9758921, 0, 
0.951408, 0.2358866, -0.1979396, 0, 
-0.2576086, 0.9618647, -0.09194702, 0, 
0.006949634, -0.2006155, 0.1520914, 1
);}


if(boneIndex == 11){ return mat4(
0.3325014, 0.07821449, 0.9398537, 0, 
0.545859, 0.7967065, -0.2594158, 0, 
-0.7690776, 0.5992841, 0.2222118, 0, 
0.2700784, -0.0168642, -0.008511757, 1
);}


if(boneIndex == 12){ return mat4(
0.3982282, 0.1630051, 0.9026868, 0, 
0.8599104, 0.2762379, -0.4292393, 0, 
-0.3193245, 0.9471654, -0.03016403, 0, 
0.1720099, -0.0337125, 0.04602373, 1
);}


if(boneIndex == 13){ return mat4(
0.5667226, 0.1805972, 0.8038719, 0, 
0.7993468, 0.1159367, -0.5895786, 0, 
-0.1996746, 0.9767005, -0.07865587, 0, 
0.1259921, -0.04274784, 0.06762985, 1
);}


if(boneIndex == 14){ return mat4(
0.5444647, 0.04385248, -0.8376365, 0, 
-0.1996747, 0.9767004, -0.07865586, 0, 
0.8146705, 0.2100801, 0.5405352, 0, 
0.21595, -0.002750654, 0.354908, 1
);}


if(boneIndex == 15){ return mat4(
0.1917746, 0.08772747, 0.9775103, 0, 
0.9421958, 0.2623719, -0.2083932, 0, 
-0.274753, 0.9609709, -0.0323402, 0, 
0.07073823, -0.1825406, 0.08552749, 1
);}


if(boneIndex == 16){ return mat4(
-0.6725804, -0.1564375, 0.7232999, 0, 
0.695505, 0.2002642, 0.6900485, 0, 
-0.2528006, 0.9671721, -0.02589074, 0, 
0.05155439, -0.1883797, 0.02606715, 1
);}


if(boneIndex == 17){ return mat4(
0.07637253, -0.03387088, 0.9965038, 0, 
0.9536929, 0.2940894, -0.06309555, 0, 
-0.2909241, 0.9551777, 0.05476275, 0, 
0.09694248, -0.174798, -0.05848349, 1
);}


if(boneIndex == 18){ return mat4(
0.2909242, -0.9551777, -0.05476141, 0, 
-0.9536928, -0.2940895, 0.06309696, 0, 
-0.07637348, 0.03386917, -0.9965038, 0, 
-0.3687983, 1.544234, 0.03564011, 1
);}


if(boneIndex == 19){ return mat4(
-0.03258345, 0.01126419, 0.9994057, 0, 
0.9566823, 0.289792, 0.02792424, 0, 
-0.2893052, 0.9570234, -0.02021867, 0, 
0.09383747, -0.1777159, 0.06679432, 1
);}


if(boneIndex == 20){ return mat4(
0.1376884, -0.03023651, 0.9900139, 0, 
0.8793397, 0.4637555, -0.1081324, 0, 
-0.4558551, 0.8854473, 0.09044194, 0, 
0.4237253, -0.106856, -0.08824236, 1
);}


if(boneIndex == 21){ return mat4(
0.2927602, -0.09556602, 0.9513983, 0, 
0.7685894, 0.6154302, -0.1746883, 0, 
-0.5688249, 0.7823766, 0.2536245, 0, 
0.6739869, -0.02525931, -0.31821, 1
);}


if(boneIndex == 22){ return mat4(
0.4177522, -0.165484, 0.8933634, 0, 
0.7162927, 0.6648833, -0.2117899, 0, 
-0.5589346, 0.7283855, 0.3962914, 0, 
0.6963459, 0.01779972, -0.4974489, 1
);}


if(boneIndex == 23){ return mat4(
0.3536252, -0.07034601, 0.9327384, 0, 
0.9057568, 0.2747469, -0.3226747, 0, 
-0.2335681, 0.9589399, 0.1608741, 0, 
0.01904672, -0.1867853, -0.193359, 1
);}


if(boneIndex == 24){ return mat4(
-0.2403338, 0.08512451, 0.9669508, 0, 
0.8980187, -0.3586805, 0.2547768, 0, 
0.3685139, 0.9295712, 0.009759822, 0, 
-0.9479071, -0.0622058, -0.02095932, 1
);}


if(boneIndex == 25){ return mat4(
0.339726, -0.3944244, 0.8538243, 0, 
0.2574677, -0.8341388, -0.4877739, 0, 
0.9045978, 0.3855414, -0.1818268, 0, 
-1.344243, 0.4975586, 0.2566755, 1
);}


if(boneIndex == 26){ return mat4(
0.6233544, 0.1288485, 0.7712509, 0, 
-0.2889153, -0.8785821, 0.3802919, 0, 
0.7266068, -0.4598829, -0.5104415, 0, 
-0.9642559, 1.68799, 0.5061297, 1
);}


if(boneIndex == 27){ return mat4(
0.5538725, -0.5293999, 0.6426209, 0, 
-0.7412528, -0.6650257, 0.09102558, 0, 
0.3791704, -0.5267613, -0.7607585, 0, 
-0.6073254, 1.420786, 0.7223597, 1
);}


if(boneIndex == 28){ return mat4(
0.4780424, -0.6120049, 0.6300207, 0, 
-0.8623153, -0.4633914, 0.2041604, 0, 
0.166999, -0.640874, -0.7492619, 0, 
-0.4256157, 1.487713, 0.7002071, 1
);}


if(boneIndex == 29){ return mat4(
0.3877769, -0.8152724, -0.4300714, 0, 
-0.8893066, -0.4536131, 0.05805014, 0, 
-0.2424126, 0.3599545, -0.9009272, 0, 
-0.5507153, 1.173261, -0.3621614, 1
);}


if(boneIndex == 30){ return mat4(
0.4420699, 0.3578815, 0.822494, 0, 
-0.2706903, -0.82098, 0.5027121, 0, 
0.8551617, -0.4448748, -0.2660554, 0, 
-1.200204, 1.798457, 0.2759533, 1
);}


if(boneIndex == 31){ return mat4(
0.1830066, 0.5667933, 0.8032778, 0, 
-0.1566837, -0.7898173, 0.5929919, 0, 
0.9705461, -0.2343818, -0.05573441, 0, 
-1.467803, 1.708242, 0.05269978, 1
);}


if(boneIndex == 32){ return mat4(
0.7728248, -0.415743, -0.4794791, 0, 
0.6315014, 0.4289873, 0.6458921, 0, 
-0.06283474, -0.8019528, 0.594074, 0, 
-0.6690004, 1.124042, -0.3922955, 1
);}


if(boneIndex == 33){ return mat4(
0.4232059, -0.08524989, 0.9020141, 0, 
0.7373327, 0.6109688, -0.2881979, 0, 
-0.5265335, 0.7870516, 0.3214229, 0, 
0.4676372, -0.03340286, -0.3955536, 1
);}


if(boneIndex == 34){ return mat4(
0.3649508, 0.1257657, 0.9224936, 0, 
0.74228, 0.5587859, -0.3698362, 0, 
-0.5619892, 0.8197204, 0.1105757, 0, 
0.4940811, -0.010258, -0.1275042, 1
);}


if(boneIndex == 35){ return mat4(
0.573052, 0.3025757, 0.7616164, 0, 
0.7308052, 0.2318837, -0.641992, 0, 
-0.3708576, 0.9244884, -0.08824263, 0, 
0.3791437, 0.04616361, 0.09787551, 1
);}


if(boneIndex == 36){ return mat4(
0.005475801, 0.2490842, 0.9684665, 0, 
0.9509995, 0.298107, -0.08204833, 0, 
-0.3091435, 0.9214606, -0.2352467, 0, 
0.1283541, -0.1332637, 0.3764496, 1
);}


if(boneIndex == 37){ return mat4(
-0.1410442, 0.1002335, 0.9849163, 0, 
0.8698232, -0.4625463, 0.1716352, 0, 
0.4727727, 0.8809112, -0.02194569, 0, 
-0.9599925, 0.01726276, 0.045627, 1
);}


if(boneIndex == 38){ return mat4(
-0.5226176, 0.4197157, 0.742098, 0, 
0.2726914, -0.7424123, 0.6119345, 0, 
0.8077811, 0.5221715, 0.273545, 0, 
-1.180115, 0.3816667, -0.2838948, 1
);}


if(boneIndex == 39){ return mat4(
-0.8622334, 0.4481836, 0.2359772, 0, 
-0.1237739, -0.6382003, 0.7598559, 0, 
0.4911555, 0.6259654, 0.6057511, 0, 
-0.632175, 0.2459923, -0.4013858, 1
);}


if(boneIndex == 40){ return mat4(
-0.7382765, 0.5521872, -0.3873471, 0, 
-0.655114, -0.4503424, 0.6066448, 0, 
0.1605428, 0.7016281, 0.6942227, 0, 
-0.3165857, 0.1046005, -0.1774684, 1
);}


if(boneIndex == 41){ return mat4(
-0.8287254, 0.5519447, -0.09258381, 0, 
-0.1685002, -0.08831927, 0.9817376, 0, 
0.5336877, 0.829191, 0.1661953, 0, 
-0.6677631, -0.03804741, 0.1966447, 1
);}


if(boneIndex == 42){ return mat4(
0.8354298, 0.5298962, 0.1458355, 0, 
-0.2058979, 0.05573571, 0.9769856, 0, 
-0.5095722, 0.8462296, -0.1556676, 0, 
-0.5974862, 1.064732, 0.3452927, 1
);}


if(boneIndex == 43){ return mat4(
-0.9686998, -0.2384715, 0.06893641, 0, 
0.1917991, -0.5427278, 0.8177166, 0, 
-0.1575884, 0.8053439, 0.5714788, 0, 
0.07379981, 0.4442127, -0.2754076, 1
);}


if(boneIndex == 44){ return mat4(
-0.3704608, -0.8687584, -0.3286614, 0, 
0.3814916, -0.4649268, 0.7989417, 0, 
-0.8468901, 0.1705952, 0.503661, 0, 
0.3978507, 1.417983, 0.01746383, 1
);}


if(boneIndex == 45){ return mat4(
-0.9473564, -0.2314855, 0.2212027, 0, 
-0.09921359, 0.8690971, 0.4845902, 0, 
0.3044223, -0.4371335, 0.8463113, 0, 
-0.5690118, 1.072979, 0.3689539, 1
);}


if(boneIndex == 46){ return mat4(
-0.7050017, -0.3094858, 0.6381155, 0, 
0.5164013, 0.3927084, 0.7609928, 0, 
-0.4861097, 0.8660248, -0.1170413, 0, 
0.3858883, 0.07002367, 0.2022194, 1
);}


if(boneIndex == 47){ return mat4(
0.03570547, -0.4314501, 0.9014304, 0, 
0.5405732, 0.7669924, 0.3456924, 0, 
-0.8405391, 0.4749459, 0.260616, 0, 
0.5277721, 0.4685405, -0.2201114, 1
);}


if(boneIndex == 48){ return mat4(
-0.1803553, 0.4601292, 0.8693406, 0, 
0.9817664, 0.03024548, 0.1876707, 0, 
0.06005892, 0.887337, -0.4571943, 0, 
-0.3810372, -0.1020087, 0.6998829, 1
);}


if(boneIndex == 49){ return mat4(
-0.3183191, -0.2684665, 0.9091749, 0, 
0.9323004, -0.262387, 0.2489367, 0, 
0.1717243, 0.9268653, 0.3338139, 0, 
-0.5148932, -0.04353657, -0.4067115, 1
);}


if(boneIndex == 50){ return mat4(
-0.2828522, -0.2646586, 0.9219279, 0, 
0.9568104, -0.1451423, 0.2518884, 0, 
0.06714612, 0.9533574, 0.2942817, 0, 
-0.3722567, -0.06241161, -0.372521, 1
);}


if(boneIndex == 51){ return mat4(
0.2062573, 0.05467153, 0.9769694, 0, 
0.9760078, 0.05969026, -0.2093947, 0, 
-0.06976346, 0.9967189, -0.04104828, 0, 
-0.1792709, -0.2211924, 0.1030338, 1
);}


if(boneIndex == 52){ return mat4(
0.4203972, 0.05278821, 0.9058034, 0, 
0.7821447, 0.4849333, -0.3912663, 0, 
-0.4599083, 0.8729567, 0.1625766, 0, 
0.05225264, -0.1561262, -0.01293114, 1
);}


if(boneIndex == 53){ return mat4(
0.667475, 0.126804, 0.7337559, 0, 
0.6006491, 0.4907255, -0.6311966, 0, 
-0.4401109, 0.862038, 0.2513823, 0, 
-0.02052421, -0.1743423, 0.01591595, 1
);}


if(boneIndex == 54){ return mat4(
-0.2615628, -0.005218943, 0.9651725, 0, 
0.9560009, -0.1390333, 0.2583255, 0, 
0.1328429, 0.9902741, 0.04135524, 0, 
-0.3798665, -0.2318287, 0.06206634, 1
);}


if(boneIndex == 55){ return mat4(
-0.1530349, 0.2348205, 0.9599166, 0, 
0.8428802, 0.5380945, 0.002744669, 0, 
-0.5158811, 0.8095147, -0.2802727, 0, 
0.09047358, -0.03843393, 0.2777043, 1
);}


if(boneIndex == 56){ return mat4(
0.4038888, 0.3451524, 0.8471977, 0, 
0.8580717, 0.1781324, -0.4816448, 0, 
-0.317154, 0.9214874, -0.2242197, 0, 
0.001164544, -0.1272042, 0.2015288, 1
);}


if(boneIndex == 57){ return mat4(
-0.1649288, 0.2002651, 0.96576, 0, 
0.9721804, -0.1321111, 0.1934206, 0, 
0.166323, 0.9707939, -0.1729048, 0, 
-0.394476, -0.2046714, 0.2613512, 1
);}


if(boneIndex == 58){ return mat4(
0.106292, 0.4410661, 0.8911579, 0, 
0.7945517, 0.5011652, -0.342814, 0, 
-0.5978206, 0.7445095, -0.29718, 0, 
0.1450841, 0.001460467, 0.3148143, 1
);}


if(boneIndex == 59){ return mat4(
0.4265114, 0.6651873, 0.6128734, 0, 
0.5127812, 0.3803484, -0.7696692, 0, 
-0.745079, 0.6425428, -0.1788725, 0, 
0.1448354, 0.008805656, 0.2489128, 1
);}


if(boneIndex == 60){ return mat4(
0.1021169, -0.5899944, 0.8009238, 0, 
0.9938512, 0.09514657, -0.05662586, 0, 
-0.04279628, 0.8017818, 0.5960827, 0, 
-0.2425128, -0.1464327, -0.533416, 1
);}


if(boneIndex == 61){ return mat4(
0.3184833, -0.3070517, 0.8968208, 0, 
0.7875405, -0.4408537, -0.4306136, 0, 
0.5275872, 0.8434263, 0.101411, 0, 
-0.5982175, -0.05508124, -0.1004038, 1
);}


if(boneIndex == 62){ return mat4(
0.590167, -0.2923236, 0.7524956, 0, 
0.360506, -0.7385949, -0.5696608, 0, 
0.7223145, 0.6074742, -0.3305099, 0, 
-0.5679532, 0.1273483, 0.124424, 1
);}


if(boneIndex == 63){ return mat4(
0.5824318, 0.2585894, 0.7706522, 0, 
0.7307742, 0.2486429, -0.6357247, 0, 
-0.3560088, 0.9334393, -0.04415294, 0, 
0.1142622, -0.2032977, 0.1880993, 1
);}


if(boneIndex == 64){ return mat4(
0.7505891, 0.091488, 0.654405, 0, 
0.5724634, 0.4045759, -0.7131649, 0, 
-0.3300024, 0.909917, 0.2512968, 0, 
0.1213988, -0.2118533, -0.01451726, 1
);}


if(boneIndex == 65){ return mat4(
0.906611, 0.04885652, 0.4191294, 0, 
0.3819101, 0.3273969, -0.8642662, 0, 
-0.1794466, 0.9436232, 0.2781629, 0, 
0.07555477, -0.2082069, 0.02448901, 1
);}


if(boneIndex == 66){ return mat4(
-0.9840568, -0.1313866, 0.119873, 0, 
-0.06575049, 0.8949959, 0.4412021, 0, 
-0.1652539, 0.4262863, -0.8893657, 0, 
-1.385281, 0.5575333, 1.225057, 1
);}











}

vec3 mul(mat4 m, vec3 v)
{
	vec3 r;
	r.x = m[0].x * v.x + m[0].y * v.y + m[0].z * v.z + m[0].w;
	r.y = m[1].x * v.x + m[1].y * v.y + m[1].z * v.z + m[1].w;
	r.y = m[2].x * v.x + m[2].y * v.y + m[2].z * v.z + m[2].w;

	return r;
}



vec3 mul_(mat4 m, vec3 v)
{
	vec3 r;
	r.x = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w;
	r.y = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w;
	r.y = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w;

	return r;
}


vec3 mul2(mat4 m, vec3 v)
{
	vec3 r;
	r.x = m[0].x * v.x + m[0].y * v.y + m[0].z * v.z + m[0].w;
	r.y = m[1].x * v.x + m[1].y * v.y + m[1].z * v.z + m[1].w;
	r.y = m[2].x * v.x + m[2].y * v.y + m[2].z * v.z + m[2].w;

	float num = 1.0 / (m[3].x * v.x +  m[3].y * v.y + m[3].z * v.z + m[3].w);
	r.x *= num;
	r.y *= num;
	r.z *= num;
	return r;
}

vec4 mul4(mat4 m, vec4 v)
{
	vec4 r;
	r.x = m[0].x * v.x + -m[0].y * v.y + -m[0].z * v.z + -m[0].w * v.w;
	r.y = -m[1].x * v.x + m[1].y * v.y + m[1].z * v.z + m[1].w * v.w;
	r.y = -m[2].x * v.x + m[2].y * v.y + m[2].z * v.z + m[2].w * v.w;
	r.w = -m[3].x * v.x + m[3].y * v.y + m[3].z * v.z + m[3].w * v.w;
	return r;
}

vec4 mul42(mat4 m, vec4 v)
{
	vec4 r;
	r.x = m[0].x * v.x + m[0].y * v.y + m[0].z * v.z + m[0].w * v.w;
	r.y = m[1].x * v.x + m[1].y * v.y + m[1].z * v.z + m[1].w * v.w;
	r.y = m[2].x * v.x + m[2].y * v.y + m[2].z * v.z + m[2].w * v.w;
	r.w = m[3].x * v.x + m[3].y * v.y + m[3].z * v.z + m[3].w * v.w;
	return r;
}

vec4 lmul4(mat4 m, vec4 v)
{
	vec4 r;
	r.x = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	r.y = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	r.y = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	r.w = m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	return r;
}



vec4 lmul2(mat4 m, vec4 v)
{
	vec4 r;
	r.x = m[0].x * v.x + -m[1].y * v.y + -m[2].z * v.z + m[3].w * v.w;
	r.y = -m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	r.y = -m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	r.w = -m[0].x * v.x + m[1].y * v.y + m[2].z * v.z + m[3].w * v.w;
	return r;
}

//  主函数
void main() 
{
	vec4 position ;

	// position = a_Texcoord2;

	// #ifdef SKIN_1
    //     position= skin1(a_Position, a_Texcoord1, a_Texcoord2);
	// #endif

    
	// #ifdef SKIN_2
    //     position= skin2(a_Position, a_Texcoord1, a_Texcoord2);
	// #endif

	// #ifdef SKIN_4
    //     position= skin4(a_Position, a_Texcoord1, a_Texcoord2);
	// #endif

	//position= skin4(a_Position, a_Texcoord1, a_Texcoord2);

	//position.x *= u_GPUSkinning_FrameIndex_PixelSegmentation.z * 0.0001;

	mat4 m = getMatrix(int(a_Texcoord1.x));
	position = a_Position;
	position = m * position ;


	
	
	//position = mul42(r, position) ;
	//position.xyz = mul2(u_MvpMatrix, position.xyz) ;
	// position.x += a_Texcoord2.x ;

v_Texcoord1 = a_Texcoord1;
    
    // 模型坐标 转 屏幕裁剪坐标
	#ifdef GPU_INSTANCE
		gl_Position = a_MvpMatrix * position;
	#else
		gl_Position = u_MvpMatrix * position;
	#endif

    // 主贴图UV
    v_Texcoord0 = a_Texcoord0;

    
	#if defined(COLOR)&&defined(ENABLEVERTEXCOLOR)
		v_Color = a_Color;
	#endif

	gl_Position=remapGLPositionZ(gl_Position);
}